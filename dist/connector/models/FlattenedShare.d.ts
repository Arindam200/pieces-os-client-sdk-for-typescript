/**
 * This is an open API that holds specific endpoints as a base for Pieces Context Systems
 * The point of this API is to allow us to organize and Auto Generate Code Specific for Connected Applications - this will allow for stateful context abstraction & less code within the Core Connector
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AccessEnum, Accessors, EmbeddedModelSchema, FlattenedAssets, FlattenedDistributions, GroupedTimestamp } from './';
/**
 * This is a dag safe version of the Share.
 *
 * if user is undefined && access is public then we have an asset that is publicly available.
 * @export
 * @interface FlattenedShare
 */
export interface FlattenedShare {
    /**
     *
     * @type {EmbeddedModelSchema}
     * @memberof FlattenedShare
     */
    schema?: EmbeddedModelSchema;
    /**
     * This references the share it self.
     * @type {string}
     * @memberof FlattenedShare
     */
    id: string;
    /**
     * this is the asset id on the flattened share.
     * @type {string}
     * @memberof FlattenedShare
     */
    asset?: string;
    /**
     * this is the uuid of the user that the share is created for.
     * @type {string}
     * @memberof FlattenedShare
     */
    user?: string;
    /**
     * this is the prebuilt link.
     * @type {string}
     * @memberof FlattenedShare
     */
    link: string;
    /**
     *
     * @type {AccessEnum}
     * @memberof FlattenedShare
     */
    access: AccessEnum;
    /**
     *
     * @type {Accessors}
     * @memberof FlattenedShare
     */
    accessors: Accessors;
    /**
     *
     * @type {GroupedTimestamp}
     * @memberof FlattenedShare
     */
    created: GroupedTimestamp;
    /**
     * This is a shortened version of our uuid.
     * @type {string}
     * @memberof FlattenedShare
     */
    _short: string;
    /**
     *
     * @type {string}
     * @memberof FlattenedShare
     */
    name?: string;
    /**
     *
     * @type {FlattenedAssets}
     * @memberof FlattenedShare
     */
    assets?: FlattenedAssets;
    /**
     *
     * @type {FlattenedDistributions}
     * @memberof FlattenedShare
     */
    distributions?: FlattenedDistributions;
}
export declare function FlattenedShareFromJSON(json: any): FlattenedShare;
export declare function FlattenedShareFromJSONTyped(json: any, ignoreDiscriminator: boolean): FlattenedShare;
export declare function FlattenedShareToJSON(value?: FlattenedShare | null): any;
