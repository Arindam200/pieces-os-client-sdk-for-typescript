/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { FilePickerInput, ReturnedUserProfile, SeededExternalProvider, UserProfile, Users } from '../models';
export interface LinkProviderRequest {
    seededExternalProvider?: SeededExternalProvider;
}
export interface PickFilesRequest {
    filePickerInput?: FilePickerInput;
}
/**
 *
 */
export declare class OSApi extends runtime.BaseAPI {
    /**
     * This will link an external provider to your current auth0 account.  Will throw errors if your user is not signed in.
     * /os/link_provider [POST]
     */
    linkProviderRaw(requestParameters: LinkProviderRequest): Promise<runtime.ApiResponse<ReturnedUserProfile>>;
    /**
     * This will link an external provider to your current auth0 account.  Will throw errors if your user is not signed in.
     * /os/link_provider [POST]
     */
    linkProvider(requestParameters: LinkProviderRequest): Promise<ReturnedUserProfile>;
    /**
     * This will restart PiecesOS, if successfull with return a 204. This is a LOCALOS Only Endpoint.
     * Your GET endpoint
     */
    osRestartRaw(): Promise<runtime.ApiResponse<void>>;
    /**
     * This will restart PiecesOS, if successfull with return a 204. This is a LOCALOS Only Endpoint.
     * Your GET endpoint
     */
    osRestart(): Promise<void>;
    /**
     * This will trigger a filer picker and return the string paths of the files that were selected.
     * /os/files/pick [POST]
     */
    pickFilesRaw(requestParameters: PickFilesRequest): Promise<runtime.ApiResponse<Array<string>>>;
    /**
     * This will trigger a filer picker and return the string paths of the files that were selected.
     * /os/files/pick [POST]
     */
    pickFiles(requestParameters: PickFilesRequest): Promise<Array<string>>;
    /**
     * This will trigger a folder picker and return the string paths of the folders that were selected.
     * /os/folders/pick [POST]
     */
    pickFoldersRaw(): Promise<runtime.ApiResponse<Array<string>>>;
    /**
     * This will trigger a folder picker and return the string paths of the folders that were selected.
     * /os/folders/pick [POST]
     */
    pickFolders(): Promise<Array<string>>;
    /**
     * A trigger that launches a Sign into OS Server
     */
    signIntoOSRaw(): Promise<runtime.ApiResponse<UserProfile>>;
    /**
     * A trigger that launches a Sign into OS Server
     */
    signIntoOS(): Promise<UserProfile>;
    /**
     * A trigger that signs out a user from the OS
     * /os/sign_out [POST]
     */
    signOutOfOSRaw(): Promise<runtime.ApiResponse<Users>>;
    /**
     * A trigger that signs out a user from the OS
     * /os/sign_out [POST]
     */
    signOutOfOS(): Promise<Users>;
}
