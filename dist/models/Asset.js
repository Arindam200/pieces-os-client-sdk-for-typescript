"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AssetToJSON = exports.AssetFromJSONTyped = exports.AssetFromJSON = void 0;
const runtime_1 = require("../runtime");
const index_1 = require("./index");
function AssetFromJSON(json) {
    return AssetFromJSONTyped(json, false);
}
exports.AssetFromJSON = AssetFromJSON;
function AssetFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'schema': !(0, runtime_1.exists)(json, 'schema') ? undefined : (0, index_1.EmbeddedModelSchemaFromJSON)(json['schema']),
        'id': json['id'],
        'name': !(0, runtime_1.exists)(json, 'name') ? undefined : json['name'],
        'creator': json['creator'],
        'created': (0, index_1.GroupedTimestampFromJSON)(json['created']),
        'updated': (0, index_1.GroupedTimestampFromJSON)(json['updated']),
        'synced': !(0, runtime_1.exists)(json, 'synced') ? undefined : (0, index_1.GroupedTimestampFromJSON)(json['synced']),
        'deleted': !(0, runtime_1.exists)(json, 'deleted') ? undefined : (0, index_1.GroupedTimestampFromJSON)(json['deleted']),
        'formats': (0, index_1.FormatsFromJSON)(json['formats']),
        'preview': (0, index_1.PreviewFromJSON)(json['preview']),
        'original': (0, index_1.ReferencedFormatFromJSON)(json['original']),
        'shares': !(0, runtime_1.exists)(json, 'shares') ? undefined : (0, index_1.SharesFromJSON)(json['shares']),
        'mechanism': (0, index_1.MechanismEnumFromJSON)(json['mechanism']),
        'websites': !(0, runtime_1.exists)(json, 'websites') ? undefined : (0, index_1.WebsitesFromJSON)(json['websites']),
        'interacted': !(0, runtime_1.exists)(json, 'interacted') ? undefined : (0, index_1.GroupedTimestampFromJSON)(json['interacted']),
        'tags': !(0, runtime_1.exists)(json, 'tags') ? undefined : (0, index_1.TagsFromJSON)(json['tags']),
        'sensitives': !(0, runtime_1.exists)(json, 'sensitives') ? undefined : (0, index_1.SensitivesFromJSON)(json['sensitives']),
        'persons': !(0, runtime_1.exists)(json, 'persons') ? undefined : (0, index_1.PersonsFromJSON)(json['persons']),
        'curated': !(0, runtime_1.exists)(json, 'curated') ? undefined : json['curated'],
        'discovered': !(0, runtime_1.exists)(json, 'discovered') ? undefined : json['discovered'],
        'activities': !(0, runtime_1.exists)(json, 'activities') ? undefined : (0, index_1.ActivitiesFromJSON)(json['activities']),
        'score': !(0, runtime_1.exists)(json, 'score') ? undefined : (0, index_1.ScoreFromJSON)(json['score']),
        'favorited': !(0, runtime_1.exists)(json, 'favorited') ? undefined : json['favorited'],
        'pseudo': !(0, runtime_1.exists)(json, 'pseudo') ? undefined : json['pseudo'],
        'annotations': !(0, runtime_1.exists)(json, 'annotations') ? undefined : (0, index_1.AnnotationsFromJSON)(json['annotations']),
        'hints': !(0, runtime_1.exists)(json, 'hints') ? undefined : (0, index_1.HintsFromJSON)(json['hints']),
        'anchors': !(0, runtime_1.exists)(json, 'anchors') ? undefined : (0, index_1.AnchorsFromJSON)(json['anchors']),
        'conversations': !(0, runtime_1.exists)(json, 'conversations') ? undefined : (0, index_1.ConversationsFromJSON)(json['conversations']),
    };
}
exports.AssetFromJSONTyped = AssetFromJSONTyped;
function AssetToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'schema': (0, index_1.EmbeddedModelSchemaToJSON)(value.schema),
        'id': value.id,
        'name': value.name,
        'creator': value.creator,
        'created': (0, index_1.GroupedTimestampToJSON)(value.created),
        'updated': (0, index_1.GroupedTimestampToJSON)(value.updated),
        'synced': (0, index_1.GroupedTimestampToJSON)(value.synced),
        'deleted': (0, index_1.GroupedTimestampToJSON)(value.deleted),
        'formats': (0, index_1.FormatsToJSON)(value.formats),
        'preview': (0, index_1.PreviewToJSON)(value.preview),
        'original': (0, index_1.ReferencedFormatToJSON)(value.original),
        'shares': (0, index_1.SharesToJSON)(value.shares),
        'mechanism': (0, index_1.MechanismEnumToJSON)(value.mechanism),
        'websites': (0, index_1.WebsitesToJSON)(value.websites),
        'interacted': (0, index_1.GroupedTimestampToJSON)(value.interacted),
        'tags': (0, index_1.TagsToJSON)(value.tags),
        'sensitives': (0, index_1.SensitivesToJSON)(value.sensitives),
        'persons': (0, index_1.PersonsToJSON)(value.persons),
        'curated': value.curated,
        'discovered': value.discovered,
        'activities': (0, index_1.ActivitiesToJSON)(value.activities),
        'score': (0, index_1.ScoreToJSON)(value.score),
        'favorited': value.favorited,
        'pseudo': value.pseudo,
        'annotations': (0, index_1.AnnotationsToJSON)(value.annotations),
        'hints': (0, index_1.HintsToJSON)(value.hints),
        'anchors': (0, index_1.AnchorsToJSON)(value.anchors),
        'conversations': (0, index_1.ConversationsToJSON)(value.conversations),
    };
}
exports.AssetToJSON = AssetToJSON;
