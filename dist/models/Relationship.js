"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.RelationshipToJSON = exports.RelationshipFromJSONTyped = exports.RelationshipFromJSON = void 0;
const runtime_1 = require("../runtime");
const index_1 = require("./index");
function RelationshipFromJSON(json) {
    return RelationshipFromJSONTyped(json, false);
}
exports.RelationshipFromJSON = RelationshipFromJSON;
function RelationshipFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'id': json['id'],
        'schema': !(0, runtime_1.exists)(json, 'schema') ? undefined : (0, index_1.EmbeddedModelSchemaFromJSON)(json['schema']),
        'embeddings': (0, index_1.EmbeddingsFromJSON)(json['embeddings']),
        'edges': (0, index_1.EdgesFromJSON)(json['edges']),
        'created': (0, index_1.GroupedTimestampFromJSON)(json['created']),
        'updated': (0, index_1.GroupedTimestampFromJSON)(json['updated']),
        'deleted': !(0, runtime_1.exists)(json, 'deleted') ? undefined : (0, index_1.GroupedTimestampFromJSON)(json['deleted']),
    };
}
exports.RelationshipFromJSONTyped = RelationshipFromJSONTyped;
function RelationshipToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'id': value.id,
        'schema': (0, index_1.EmbeddedModelSchemaToJSON)(value.schema),
        'embeddings': (0, index_1.EmbeddingsToJSON)(value.embeddings),
        'edges': (0, index_1.EdgesToJSON)(value.edges),
        'created': (0, index_1.GroupedTimestampToJSON)(value.created),
        'updated': (0, index_1.GroupedTimestampToJSON)(value.updated),
        'deleted': (0, index_1.GroupedTimestampToJSON)(value.deleted),
    };
}
exports.RelationshipToJSON = RelationshipToJSON;
