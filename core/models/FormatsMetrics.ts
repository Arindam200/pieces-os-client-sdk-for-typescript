/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EmbeddedModelSchema } from './EmbeddedModelSchema';
import {
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
} from './EmbeddedModelSchema';
import type { FormatMetric } from './FormatMetric';
import {
    FormatMetricFromJSON,
    FormatMetricFromJSONTyped,
    FormatMetricToJSON,
} from './FormatMetric';

/**
 * 
 * @export
 * @interface FormatsMetrics
 */
export interface FormatsMetrics {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof FormatsMetrics
     */
    schema?: EmbeddedModelSchema;
    /**
     * 
     * @type {Array<FormatMetric>}
     * @memberof FormatsMetrics
     */
    iterable: Array<FormatMetric>;
}

/**
 * Check if a given object implements the FormatsMetrics interface.
 */
export function instanceOfFormatsMetrics(value: object): boolean {
    if (!('iterable' in value)) return false;
    return true;
}

export function FormatsMetricsFromJSON(json: any): FormatsMetrics {
    return FormatsMetricsFromJSONTyped(json, false);
}

export function FormatsMetricsFromJSONTyped(json: any, ignoreDiscriminator: boolean): FormatsMetrics {
    if (json == null) {
        return json;
    }
    return {
        
        'schema': json['schema'] == null ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'iterable': ((json['iterable'] as Array<any>).map(FormatMetricFromJSON)),
    };
}

export function FormatsMetricsToJSON(value?: FormatsMetrics | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'schema': EmbeddedModelSchemaToJSON(value['schema']),
        'iterable': ((value['iterable'] as Array<any>).map(FormatMetricToJSON)),
    };
}

